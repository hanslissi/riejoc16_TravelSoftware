/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import API.APIClass;
import API.WeatherInfoDesrializer;
import Data.Destination;
import Data.WeatherInformation;
import Enums.WeatherType;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import javax.swing.JOptionPane;
import javax.ws.rs.core.Response;

/**
 *
 * @author johannesriedmueller
 */
public class MainWeatherDisplay extends javax.swing.JFrame {

    private WeatherTableModel weatherModel = new WeatherTableModel();

    public MainWeatherDisplay() {
        initComponents();
        taWeather.setModel(weatherModel);
        taWeather.setRowHeight(128);
        taWeather.setDefaultRenderer(Object.class, new WeatherTableCellRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmDestination = new javax.swing.JPopupMenu();
        miDelete = new javax.swing.JMenuItem();
        miEdit = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btAdd = new javax.swing.JButton();
        btPlan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        laDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taWeather = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        miDelete.setText("Delete");
        miDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDeleteActionPerformed(evt);
            }
        });
        pmDestination.add(miDelete);

        miEdit.setText("Edit");
        miEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEditActionPerformed(evt);
            }
        });
        pmDestination.add(miEdit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        btAdd.setText("Add Destination");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });
        jPanel1.add(btAdd);

        btPlan.setText("Plan travel day");
        btPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btPlan);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 50));
        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Weather of: ");
        jPanel2.add(jLabel1);

        laDate.setText("Today");
        jPanel2.add(laDate);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        taWeather.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        taWeather.setComponentPopupMenu(pmDestination);
        jScrollPane1.setViewportView(taWeather);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        String cityName = JOptionPane.showInputDialog("Name of city:");
        Response response = APIClass.getInstance().getTodaysWeatherOf(cityName);
        if (APIClass.getInstance().httpResponseIsOk(response)) {
            Gson gson = new GsonBuilder().registerTypeAdapter(WeatherInformation.class, new WeatherInfoDesrializer()).create();
            WeatherInformation weatherInfo = gson.fromJson(response.readEntity(String.class), WeatherInformation.class);
            weatherModel.add(new Destination(cityName, weatherInfo, WeatherType.CLOUDY));
        } else {
            JOptionPane.showMessageDialog(null, "City not found...");
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void btPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPlanActionPerformed

    }//GEN-LAST:event_btPlanActionPerformed

    private void miEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEditActionPerformed
        int[] selectedIndices = taWeather.getSelectedRows();
        if (selectedIndices.length == 1) {
            String cityName = JOptionPane.showInputDialog("Name of city:");

            Response response = APIClass.getInstance().getTodaysWeatherOf(cityName);
            if (APIClass.getInstance().httpResponseIsOk(response)) {
                Gson gson = new GsonBuilder().registerTypeAdapter(WeatherInformation.class, new WeatherInfoDesrializer()).create();
                WeatherInformation weatherInfo = gson.fromJson(response.readEntity(String.class), WeatherInformation.class);
                weatherModel.edit(new Destination(cityName, weatherInfo, WeatherType.CLOUDY), selectedIndices[0]);
            } else {
                JOptionPane.showMessageDialog(null, "City not found...");
            }
        } else {
            JOptionPane.showMessageDialog(null, "You have to select one entry.");
        }
    }//GEN-LAST:event_miEditActionPerformed

    private void miDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDeleteActionPerformed
        int[] selectedIndices = taWeather.getSelectedRows();
        if (selectedIndices.length == 1) {
            weatherModel.remove(selectedIndices[0]);
        } else {
            JOptionPane.showMessageDialog(null, "You have to select one entry.");
        }
    }//GEN-LAST:event_miDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWeatherDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWeatherDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWeatherDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWeatherDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWeatherDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btPlan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel laDate;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miEdit;
    private javax.swing.JPopupMenu pmDestination;
    private javax.swing.JTable taWeather;
    // End of variables declaration//GEN-END:variables
}
